instalar nodejs
v10.06.0
para instalar la version requerida
https://comoinstalar.info/nodejs-en-linux/

instalar npm
mkdir webpack-4
crear una carpeta webpack-4

npm init

instalar webpack

npm install webpack --save

dependencias core
dependencias de desarrollo

npm install webpack@4.32.2 --save-dev --save-exact

webpack@4.32.2  //para instalar la versi√≥n del webpack
--save-dev //para instalar la dependencias de desarrollo
--save-exact //para instalar la version exacta cuando se descargue el programa

desde la version 4 se requiere instalar CLI: Command Line Interface
npm install webpack-cli --save-dev --save-exact

npx //para llamar la dependencias solo en el proyecto
npx webpack -v //para ver la version instalada


//pasamos el archivo que deseamos por webpack
npx webpack --entry ./index.js --output bundle.js

npx webpack --entry ./index.js --output bundle.js --mode development
npx webpack --entry ./index.js --output bundle.js --mode production

modo de defecto es produccion 

//INICIANDO UN webpack.config

Para ejecutar comandos de webpack hay diferentes caminos üõ§. Anteriormente ejecutamos un comando con NPX para transpilar un archivos .JS y generarlo especificando un OUTPUT, pero esto puede ser en la pr√°ctica algo que quite m√°s tiempo y engorroso.

Para ello se puede crear un archivo de configuraci√≥n de webpack. El nombre de este archivo en teor√≠a puede ser cualquiera pero se recomienda llamarlo webpack.config.js.

Dentro de este archivo se especificar√°n las acciones que queramos que webpack haga por nosotros. El archivo de ejemplo es este:

const path = require(‚Äòpath‚Äô) /*este es un modulo de node y se encarga de la gestion de rutas*/

/*Para exportar un modulo, se debe hacer de la forma de commonJS*/
module.exports = {
    entry: ‚Äò./index.js‚Äô, /*El archivo que queremos transpilar */
    mode: ‚Äòdevelopment‚Äô, /* modo de ejecuci√≥n */
    output:{ /*Configuraciones para el archivo final que generar√° webpack */
        path: path.resolve(__dirname), /* La ruta en donde quedar√° el archivo final */
        filename: ‚Äòbundle.js‚Äô /*El nombre con el que se crear√° el archivo final */
    } 
}




Una vez se tenga esta configuraci√≥n ‚öôÔ∏è se puede llamar de dos maneras ‚úåüèΩ:

con npx: Se puede llamar con este comando para que webpack tome el archivo de configuraci√≥n y haga su proceso con base en este. El comando es

npx webpack

con npm: Dentro del archivo .JSON, dentro del objeto scripts se puede configurar un comando para ser llamado directamente por npm. El comando que se a√±adir√° es: build, que a su vez llamar√° a webpack

‚Äúscripts‚Äù:{
    ‚Äúbuild‚Äù: ‚Äúwebpack‚Äù //build sera el nombre que usaremos en consola
}

Para ejecutarlo basta con escribir en la consola ü§©:

npm run webpack 


//importando el modulo path
const path = require('path');

//exportar el modulo

module.exports = {
  entry: './index.js',
  mode: 'development',
  output: {
    path: path.resolve(__dirname),
    filename: 'bundle.js'
  }
}

Cargando configuraciones por defecto y personalizadas
Por medio del uso de la bandera --config podemos especificar un archivo de configuraci√≥n externo con el nombre que queramos en lugar del nombre por defecto webpack.config.js.

Resumen de clase:

En esta clase se agrego una configuracion de webpack diferentes para un build externo. para eso se agrego.
dentro de la carpeta externals un webpack.config.js
con la siguiente configuracion

const path = require('path')

module.exports = {
  entry: path.resolve(__dirname, 'index.js'),
  mode: 'development',
  output: {
    path: path.resolve(__dirname, 'dist' ),
    filename: 'bundle.js'
  }
}

donde le indicamos que nuestro bundle se guarde dentro de la carpeta dist.

Tambien se agregaron 3 cmandos en npm scripts para probar las diferentes ejecuciones.

"scripts": {
    "build": "webpack --entry ./index.js --output ./bundle.js --mode development",
    "build:local": "webpack --mode production",
    "build:external": "webpack --config ./external/webpack.config.js"
  },

  Importante flag --config

  Carpeta dist : distribution como para referirse que es producto de distribuci√≥n o producto final